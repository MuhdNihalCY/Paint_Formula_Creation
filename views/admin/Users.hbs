<section class="AdminPage">

    <div id="loader-container">
        {{!-- <div class="loader"></div> --}}
        <div class="loader">
            <span class="bar"></span>
            <span class="bar"></span>
            <span class="bar"></span>
        </div>
    </div>


    {{!-- Add User Pop up start here --}}
    <div id="popup-container" class="popup">
        <div class="popup-content">
            <!-- Your form goes here -->
            <form action="/admin/addUser" method="post">
                <div class="AddUserFormDiv">
                    <div class="AddUserHeaderDiv">
                        <p class="AddUserHeading">Add User</p>
                        <div id="AddUserCloseBtn" class="AddUserCloseBtn">
                            <p>X</p>
                        </div>

                    </div>
                    <hr>
                    <div class="AddUserBodyDiv">
                        <div class="AddUserEachSectionDiv">
                            <p class="AddUserLabel">User Name</p>
                            <input type="text" required placeholder="Enter User Name" name="UserName"
                                oninput="this.value = this.value.toUpperCase();" class="AddUserINP">
                        </div>
                        <div class="AddUserEachSectionDiv">
                            <p class="AddUserLabel">Branch</p>
                            <select required name="Branch" class="AddUserINP" onchange="CheckForManagerDuplicates()"
                                id="BranchSelect">
                                <option value="" selected disabled>Select a Branch</option>
                                {{#each AllBranch}}
                                <option value="{{this.BranchName}}">{{this.BranchName}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="AddUserEachSectionDiv">
                            <p class="AddUserLabel">Designation</p>
                            <select required name="Designation" class="AddUserINP" id="designationSelect">
                                <option value="" selected disabled>Select a Designation</option>
                                <option value="Customer">Customer</option>
                                <option value="Sales">Sales</option>
                                <option value="Office">Office</option>
                                <option value="Production">Production</option>
                                <option value="Dispatcher">Dispatcher</option>
                                <option value="Driver">Driver</option>
                            </select>
                        </div>
                        <div id="categoryDIVCustomer" class="AddUserEachSectionDiv categoryDIVCustomer">
                            <p class="AddUserLabel">Category</p>
                            <select required name="Category" class="AddUserINP" id="categorySelect" disabled>
                                <option value="" selected disabled>Select a Category</option>
                                {{#each CustomerCategory}}
                                <option value="{{this.Category}}">{{this.Category}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="AddUserEachSectionDiv">
                            <p class="AddUserLabel">Contact</p>
                            <input type="text" name="Contact" placeholder="Enter Contact Number" class="AddUserINP"
                                required id="contactInput">
                        </div>
                        <div class="AddUserEachSectionDiv">
                            <p class="AddUserLabel">WhatsApp Number</p>
                            <input type="text" placeholder="Enter WhatsApp Number" id="whatsappInput" required
                                name="WhatsAppNumber" class="AddUserINP">
                            <div class="AdduserTickSameContact">
                                <input type="checkbox" name="ContactNumberSame" id="isSameContactNumber">
                                <p>Same as Contact Number</p>
                            </div>
                        </div>
                        <div class="AddUserEachSectionDiv">
                            <p class="AddUserLabel AdduserAlternateLabel">Alternate Contact</p>
                            <input type="text" placeholder=" Enter Alternate Contact" name="AlternateContact"
                                id="alternateContactInput" class="AddUserINP">
                        </div>
                        <div class="AddUserEachSectionDiv">
                            <p class="AddUserLabel ">Login Password</p>
                            <input type="password" placeholder=" Enter Login password" name="Password"
                                id="LoginPassword" class="AddUserINP">
                            <div class="password-container">
                                <input type="checkbox" onclick="togglePassword()">Show Password
                            </div>
                        </div>
                        <div class="AddUserEachSectionDiv AdduserSubmitDiv">
                            <input type="submit" class="btn AddUserBTNSubmit" value="Add User">
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>


    <aside class="ADSidebar">
        <div class="ADSidebarLogoDiv">
            <img class="AdLogo" src="/images/Logo/MegaPaintsLogo.png" alt="">
        </div>
        <div class="ADSelectioSideBarDIv">
            <a href="/admin">
                <div class="Category ">
                    <p class="ADDelectionSideBarLabel">Category</p>
                    <img src="/images/Icons/MoreSelect.png" alt="" class="ADMoreIcon">
                </div>
            </a>
            <a href="/admin/Sub-Category">
                <div class="Category">
                    <p class="ADDelectionSideBarLabel">Sub-Category</p>
                    <img src="/images/Icons/MoreSelect.png" alt="" class="ADMoreIcon">
                </div>
            </a>
            <a href="/admin/Product">
                <div class="Category">
                    <p class="ADDelectionSideBarLabel">Product</p>
                    <img src="/images/Icons/MoreSelect.png" alt="" class="ADMoreIcon">
                </div>
            </a>
            <a href="/admin/Additives">
                <div class="Category">
                    <p class="ADDelectionSideBarLabel">Additives</p>
                    <img src="/images/Icons/MoreSelect.png" alt="" class="ADMoreIcon">
                </div>
            </a>
            <a href="/admin/Binders">
                <div class="Category">
                    <p class="ADDelectionSideBarLabel">Binders</p>
                    <img src="/images/Icons/MoreSelect.png" alt="" class="ADMoreIcon">
                </div>
            </a>
            <a href="/admin/Branches">
                <div class="Category ">
                    <p class="ADDelectionSideBarLabel">Branches</p>
                    <img src="/images/Icons/MoreSelect.png" alt="" class="ADMoreIcon">
                </div>
            </a>
            <a href="/admin/Users">
                <div class="Category ADactiveButton">
                    <p class="ADDelectionSideBarLabel">Users</p>
                    <img src="/images/Icons/MoreSelect.png" alt="" class="ADMoreIcon">
                </div>
            </a>


            <div class="ADAccount">
                <p class="ADDelectionSideBarLabel">Account</p>
                <img src="/images/Icons/MoreSelect.png" alt="" class="ADAccountIcon">
            </div>

            <div class="ADAccountExpandDiv">
                <a href="/admin/change-password">
                    <div class="ADlogoutDiv">
                        <p>Change Password</p>
                        {{!-- <img src="/images/Icons/logout.png" alt="" class="ADLogoutIcon"> --}}
                    </div>
                </a>
                <a href="/admin/logout">
                    <div class="ADlogoutDiv">
                        <p>Logout</p>
                        <img src="/images/Icons/logout.png" alt="" class="ADLogoutIcon">
                    </div>
                </a>
            </div>

        </div>
    </aside>
    <section class="AdMainArea">
        <div class="ADMainAreaDiv">
            <div class="ADMainAreaHeaderDiv">
                <p class="ADMainAreaHeader">Users</p>
            </div>
            <div class="ADMainAddButtonDiv">
                {{!-- <a href="/admin/addUser"> --}}
                    <div id="ADMainAddButton" class="ADMainAddButton">
                        <p>Add new User</p>
                        <img src="/images/Icons/add.png" alt="" class="ADAddNewIcon">
                    </div>
                    {{!--
                </a> --}}
            </div>
            <p class="AddError text-center" style="color: red;">{{Error}}</p>
            <div class="ADSubCategorySelectionArea">
                <div class="ADSubCategorySelectionDiv">
                    <p class="ADSubCategorySelectionLabel">Select Designation</p>
                    <select class="ADSubCategorySelectionSelectBox" onchange="selectDesignation()" name="Category"
                        id="DesignationSelect">
                        <option value="" selected>All Users</option>
                        <option value="Manager">Manager</option>
                        <option value="Sales">Sales</option>
                        <option value="Office">Office</option>
                        <option value="Production">Production</option>
                        <option value="Dispatcher">Dispatcher</option>
                        <option value="Driver">Driver</option>
                        <option value="Customer">Customer</option>
                    </select>
                </div>
            </div>
            <div class="ADMainTableDiv">
                <table id="" class="ADMainTable  table table-bordered text-center ADcustom-border">
                    <thead class="ADTableHead">
                        <tr class="ADTableHeadTR">
                            <th>ID</th>
                            <th>Name</th>
                            <th>Designation</th>
                            <th>Branch</th>
                            <th>Contact</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        {{#if Users}}
                        {{#each Users}}
                        <tr>
                            <td>{{this.UserID}}</td>
                            <td>{{this.UserName}}</td>
                            <td>{{this.Designation}}</td>
                            <td>{{this.Branch}}</td>
                            <td>{{this.Contact}}</td>
                            <td><a href="/admin/EditUser/{{this.UserID}}" class="btn btn-primary">Edit</a></td>
                        </tr>
                        {{/each}}
                        {{else}}
                        <tr>
                            <td class="ADSubCategoryNotAvailable" colspan="4">No Users are Added</td>
                        </tr>
                        {{/if}}
                    </tbody>
                </table>


            </div>


            <div class="ADCustomerCatDiv">
                <div class="ADCustomerCatHeader">
                    <p class="ADCustomerCatHead">Customer Category</p>
                    <button id="ADAddCusCategoryBTN" class="ADAddCusCategoryBTN">Add New Customer Category</button>
                    <img class="AdCustomerMoreIcon" onclick="toggleCategoryList()" src="/images/Icons/MoreSelect.png"
                        id="rotateIcon" alt="">
                </div>
                <div class="CategoryList" id="categoryList">
                    <hr>

                    {{#each CustomerCategory}}
                    <div class="ADCustomerCategoryRow">
                        <p class="ADCustomerCategory">{{this.Category}}</p>
                        <a href="/admin/removecustomerCategory/{{this.Category}}" class="btn ADCusotmerdelete-button"
                            onclick="return confirm('Are you sure you want to delete this Customer category?')"><i
                                class="fas fa-trash"></i> Delete</a>
                    </div>

                    {{/each}}
                </div>
            </div>

            {{!-- Pop up for add Category of customers --}}
            <div id="ADCUSpopup">
                <div class="ADCUSpopup">
                    <form method="post" action="/admin/AddCustomerCategory" onsubmit="return validateForm()">
                        <div class="ADCusPopHeader">
                            <p class="ADCUSpopup-header">Add Customer Category</p>
                            <button type="button" class="closeBtn" onclick="closePopup()">X</button>
                        </div>
                        <input type="text" required name="Category" id="categoryInput"
                            placeholder="Enter category name">
                        <button type="submit" id="submitBtn">Submit</button>
                    </form>
                </div>
            </div>
        </div>

    </section>
</section>


<script>
    // alert(AddingError);

    var AllUsers = [];
    var AllBranchData = [];

    // JavaScript to show the popup
    const addButton = document.getElementById('ADMainAddButton');
    const popupContainer = document.getElementById('popup-container');
    const AddUserCloseBtn = document.getElementById('AddUserCloseBtn');


    // Get references to the select boxes
    const designationSelect = document.getElementById('designationSelect');
    const categorySelect = document.getElementById('categorySelect');
    const categoryDIVCustomer = document.getElementById("categoryDIVCustomer");

    // Get references to the elements
    const contactInput = document.getElementById('contactInput');
    const whatsappInput = document.getElementById('whatsappInput');
    const isSameContactNumberCheckbox = document.getElementById('isSameContactNumber');

    const alternateContactInput = document.getElementById('alternateContactInput');

    var CustomeraddButton = document.getElementById('ADAddCusCategoryBTN');
    var popup = document.getElementById('ADCUSpopup');
    var categoryInput = document.getElementById('categoryInput');




    // Function to show the loader
    function showLoader() {
        document.getElementById('loader-container').style.display = 'flex';
    }

    // Function to hide the loader
    function hideLoader() {
        document.getElementById('loader-container').style.display = 'none';
    }


    document.addEventListener("DOMContentLoaded", function () {
        loadAllUser();
    });

    function loadAllUser() {
        fetch('/admin/getAllUsersAndBranchData/Api')
            .then(response => response.json())
            .then(Data => {
                console.log('Response Data:', Data);
                AllUsers = Data.Users;
                AllBranchData = Data.Branches;
            })
            .catch(error => {
                console.log('Error:', error);
            });
    }

    function selectDesignation() {
        var Designation = document.getElementById('DesignationSelect').value;
        //alert(Designation);

        if (Designation === "") {
            displayFilteredUsers(AllUsers);
        } else {
            var UserwithSameDesignation = [];

            // Iterate through the AllUsers array
            for (var i = 0; i < AllUsers.length; i++) {
                if (AllUsers[i].Designation === Designation) {
                    UserwithSameDesignation.push(AllUsers[i]);
                }
            }

            // Now, UserwithSameDesignation contains users with the selected designation
            // You can use this array as needed
            //console.log(UserwithSameDesignation);
            displayFilteredUsers(UserwithSameDesignation)
        }


    }


    function displayFilteredUsers(Users) {
        const tableBody = document.querySelector('#tableBody'); // Assuming you have added an id "tableBody" to the <tbody> element

        // Clear the existing table body
        tableBody.innerHTML = '';

        //<td><a href="/admin/EditUser/{{this.UserID}}" class="btn btn-primary">Edit</a></td>
        // Check if filtered subcategories exist
        if (Users.length > 0) {
            // Iterate over each filtered subcategory and create table rows
            Users.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
          <td>${user.UserID}</td>
          <td>${user.UserName}</td>
          <td>${user.Designation}</td>
           <td>${user.Contact}</td>
          <td><a href="/admin/EditUser/${user.UserID}" class="btn btn-primary">Edit</a></td>
          `;
                tableBody.appendChild(row);
            });
        } else {
            // Display a message when no filtered subcategories are available
            const row = document.createElement('tr');
            row.innerHTML = `
          <td class="ADSubCategoryNotAvailable" colspan="5">No Users is Added</td>
          `;
            tableBody.appendChild(row);
        }
    }







    addButton.addEventListener('click', () => {
        popupContainer.style.display = 'flex';
    });

    AddUserCloseBtn.addEventListener('click', () => {
        popupContainer.style.display = 'none';
    });

    // JavaScript to hide the popup when clicking outside of it
    popupContainer.addEventListener('click', (e) => {
        if (e.target === popupContainer) {
            popupContainer.style.display = 'none';
        }
    });






    // Add an event listener to the Designation select box
    designationSelect.addEventListener('change', function () {
        // Check if the selected option is "Customer"
        if (designationSelect.value === 'Customer') {
            // If "Customer" is selected, enable and make the Category select box required
            categorySelect.disabled = false;
            categorySelect.required = true;
            categoryDIVCustomer.style.display = "block"
        } else {
            // If any other option is selected, disable and reset the Category select box
            categorySelect.disabled = true;
            categorySelect.required = false;
            categorySelect.selectedIndex = 0; // Reset to the default option
            categoryDIVCustomer.style.display = "none"
        }
    });




    // Function to update WhatsApp Number based on Contact
    function updateWhatsAppNumber() {
        if (isSameContactNumberCheckbox.checked) {
            // If the checkbox is checked, copy the value from Contact to WhatsApp Number
            whatsappInput.value = contactInput.value;
            whatsappInput.setAttribute('readonly', true); // Make it read-only
        }
    }

    // Add an input event listener to the Contact input field
    contactInput.addEventListener('input', updateWhatsAppNumber);

    // Add an event listener to the checkbox
    isSameContactNumberCheckbox.addEventListener('change', function () {
        if (isSameContactNumberCheckbox.checked) {
            // If the checkbox is checked, update WhatsApp Number immediately
            updateWhatsAppNumber();
        } else {
            // If the checkbox is unchecked, clear the value and allow input again
            whatsappInput.value = '';
            whatsappInput.removeAttribute('readonly');
        }
    });



    // Function to allow only numeric input
    function allowOnlyNumericInput(inputField) {
        inputField.addEventListener('input', function () {
            // Remove any non-numeric characters
            this.value = this.value.replace(/[^0-9]/g, '');
        });
    }

    // Get references to the input fields
    //const contactInput = document.getElementById('contactInput');
    //const whatsappInput = document.getElementById('whatsappInput');

    // Call the function for each input field
    allowOnlyNumericInput(contactInput);
    allowOnlyNumericInput(whatsappInput);
    allowOnlyNumericInput(alternateContactInput);


    function togglePassword() {
        const passwordInput = document.getElementById('LoginPassword');
        //var x = document.getElementById("myInput");
        if (passwordInput.type === "password") {
            passwordInput.type = "text";
        } else {
            passwordInput.type = "password";
        }
    }




    CustomeraddButton.addEventListener('click', function () {
        popup.style.display = 'flex';
        // Disable scrolling
        document.body.style.overflow = 'hidden';
    });


    function closePopup() {
        popup.style.display = 'none';
        // Enable scrolling
        document.body.style.overflow = 'auto';

    }



    function toggleCategoryList() {

        var categoryList = document.getElementById('categoryList');
        var icon = document.getElementById('rotateIcon');
        var BTN = document.getElementById('ADAddCusCategoryBTN');

        if (categoryList.style.maxHeight === '0px') {

            categoryList.style.maxHeight = categoryList.scrollHeight + 'px';
            icon.style.transform = 'rotate(-90deg)';
            BTN.style.display = 'block';
        } else {
            closePopup()
            categoryList.style.maxHeight = '0px';
            icon.style.transform = 'rotate(90deg)';
            BTN.style.display = 'none';

        }
    }



    function CheckForManagerDuplicates() {
        showLoader();
        console.log("Checking for manager")
        var BranchSelect = document.getElementById('BranchSelect').value;

        var BranchManagerFound = AllUsers.some((OneUser) => {
            return OneUser.Branch === BranchSelect && OneUser.Designation === "Manager";
        });

        if (BranchManagerFound) {
            // branch manager not in this Branch
            // Get the select element by ID
            var designationSelect = document.getElementById('designationSelect');

            // Loop through each option and remove the one with value "Manager"
            for (var i = 0; i < designationSelect.options.length; i++) {
                if (designationSelect.options[i].value === 'Manager') {
                    designationSelect.remove(i);
                    break;  // Once removed, exit the loop
                }
            }
            console.log("No Manager!");

        } else {
            // Branch Found
            // Get the select element by ID
            var designationSelect = document.getElementById('designationSelect');

            // Check if the "Manager" option exists
            var managerOptionExists = Array.from(designationSelect.options).some(option => option.value === 'Manager');

            // If the "Manager" option doesn't exist, create and append it
            if (!managerOptionExists) {
                var managerOption = document.createElement('option');
                managerOption.value = 'Manager';
                managerOption.text = 'Manager';

                // Append the option to the select element
                designationSelect.add(managerOption);
            }
            console.log("Added Manager!")

        }
        hideLoader();
    }

    function validateForm() {
        var categoryInput = document.getElementById('categoryInput');
        var categoryValue = categoryInput.value.trim(); // Trim leading and trailing spaces

        // Validate that the input contains only letters, numbers, spaces, and special characters
        var validInput = /^[a-zA-Z0-9\s\W]+$/.test(categoryValue);

        if (!validInput) {
            alert('Invalid input. Only letters, numbers, spaces, and special characters are allowed.');
            return false; // Prevent form submission
        }

        return true; // Allow form submission
    }


</script>



<style>
    /*Loader */
    #loader-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 999;
        display: none;
    }

    .loader {
        display: flex;
        align-items: center;
    }

    .bar {
        display: inline-block;
        width: 3px;
        height: 20px;
        background-color: rgba(255, 255, 255, .5);
        border-radius: 10px;
        animation: scale-up4 1s linear infinite;
    }

    .bar:nth-child(2) {
        height: 35px;
        margin: 0 5px;
        animation-delay: .25s;
    }

    .bar:nth-child(3) {
        animation-delay: .5s;
    }

    @keyframes scale-up4 {
        20% {
            background-color: #ffff;
            transform: scaleY(1.5);
        }

        40% {
            transform: scaleY(1);
        }
    }


    /*Loader Ends*/

    /* Styles for the background overlay */
    .popup {
        display: none;
        /* Use display: flex */
        align-items: center;
        /* Vertically center the content */
        justify-content: center;
        /* Horizontally center the content */
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        /* Semi-transparent background */
        z-index: 99;
        /* Make sure it's above other elements */
        overflow-y: auto;
        padding: 2rem 0;
    }

    /* Styles for the form container */
    .popup-content {
        /* No need for position: absolute; */
        background-color: white;
        width: 500px;
        height: 100%;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        overflow-y: auto;
        /* Allow vertical scrolling if content exceeds container height */
    }

    /*Poop up ends Here*/


    .AdminPage {
        display: flex;
    }

    .ADSidebar {
        flex: 0 0 auto;
        /* Prevent the sidebar from growing or shrinking */
        min-height: 100%;
        /* Minimum height to fill the container */
    }

    .AdMainArea {
        flex: 1;
        /* Allow the main area to grow and fill the remaining space */
        min-height: 100vh;
        /* Minimum height of the viewport */
        /* Add any other styling you want for the main area */
    }

    .ADSubCategorySelectionSelectBox {
        width: 18rem;
        margin-right: 30px;
    }

    .AddUserHeaderDiv {
        display: flex;
        justify-content: space-between;
        padding: 0 2rem;
        align-items: center;
    }

    .AddUserHeading {
        font-size: 25px;
        font-weight: 600;
        color: #3d3d3d;
        margin: 0;
    }

    .AddUserCloseBtn {
        border: 3px #3d3d3d solid;
        border-radius: 5px;
        width: 50px;
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .AddUserCloseBtn p {
        margin: 0;
        color: #3d3d3d;
        font-size: 25px;
        font-weight: 700;
    }

    .AddUserBodyDiv {
        padding: 2rem;
    }

    .AddUserEachSectionDiv {
        margin-bottom: 2rem;
    }

    /* Style for the label */
    .AddUserLabel {
        color: #3d3d3d;
        font-size: 16px;
        /* Adjust font size as needed */
        margin-bottom: 0px;
        /* Add vertical gap space between label and input */
        font-weight: 700;
    }

    /* Style for the required asterisk */
    .AddUserLabel::after {
        content: '*';
        color: red;
        margin-left: 2px;
        /* Add a small horizontal gap between label and asterisk */
    }

    /* Style for the input field */
    .AddUserINP {
        /* Add any desired styles for the input, e.g., border, padding, etc. */
        border: 1px solid #3d3d3d;
        padding: 5px;
        width: 100%;
        border-radius: 5px;
        padding: 10px 10px;
        font-size: 20px;
        font-weight: 600;
    }

    #categoryDIVCustomer {
        display: none;
    }

    .AdduserAlternateLabel::after {
        content: '';
        color: #3d3d3d;
        margin-left: 2px;
        /* Add a small horizontal gap between label and asterisk */
    }

    .AdduserTickSameContact {
        display: flex;

    }

    .AdduserTickSameContact p {
        margin: 0;
    }

    .AdduserSubmitDiv {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .AddUserBTNSubmit {
        background-color: rgb(26, 26, 188);
        color: white;
        font-weight: 600;
        font-size: 20px;
        width: 80%;
        border-radius: 5px;
    }

    .AddUserBTNSubmit:hover {
        cursor: pointer;
        background-color: blue;
        color: white;
    }

    /* Optional: You can style the entire section if needed */
    .AddUserEachSectionDiv {
        /* Add any desired styles for the entire section */
    }

    .password-container {
        display: flex;
        justify-content: start;
        align-items: center;
    }
</style>